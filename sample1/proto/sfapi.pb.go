// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sfapi.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetFilmRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFilmRequest) Reset()         { *m = GetFilmRequest{} }
func (m *GetFilmRequest) String() string { return proto.CompactTextString(m) }
func (*GetFilmRequest) ProtoMessage()    {}
func (*GetFilmRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_006f8d026c00e08a, []int{0}
}

func (m *GetFilmRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFilmRequest.Unmarshal(m, b)
}
func (m *GetFilmRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFilmRequest.Marshal(b, m, deterministic)
}
func (m *GetFilmRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFilmRequest.Merge(m, src)
}
func (m *GetFilmRequest) XXX_Size() int {
	return xxx_messageInfo_GetFilmRequest.Size(m)
}
func (m *GetFilmRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFilmRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFilmRequest proto.InternalMessageInfo

func (m *GetFilmRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetFilmResponse struct {
	Film                 *Film    `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFilmResponse) Reset()         { *m = GetFilmResponse{} }
func (m *GetFilmResponse) String() string { return proto.CompactTextString(m) }
func (*GetFilmResponse) ProtoMessage()    {}
func (*GetFilmResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_006f8d026c00e08a, []int{1}
}

func (m *GetFilmResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFilmResponse.Unmarshal(m, b)
}
func (m *GetFilmResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFilmResponse.Marshal(b, m, deterministic)
}
func (m *GetFilmResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFilmResponse.Merge(m, src)
}
func (m *GetFilmResponse) XXX_Size() int {
	return xxx_messageInfo_GetFilmResponse.Size(m)
}
func (m *GetFilmResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFilmResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFilmResponse proto.InternalMessageInfo

func (m *GetFilmResponse) GetFilm() *Film {
	if m != nil {
		return m.Film
	}
	return nil
}

type ListFilmsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilmsRequest) Reset()         { *m = ListFilmsRequest{} }
func (m *ListFilmsRequest) String() string { return proto.CompactTextString(m) }
func (*ListFilmsRequest) ProtoMessage()    {}
func (*ListFilmsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_006f8d026c00e08a, []int{2}
}

func (m *ListFilmsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilmsRequest.Unmarshal(m, b)
}
func (m *ListFilmsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilmsRequest.Marshal(b, m, deterministic)
}
func (m *ListFilmsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilmsRequest.Merge(m, src)
}
func (m *ListFilmsRequest) XXX_Size() int {
	return xxx_messageInfo_ListFilmsRequest.Size(m)
}
func (m *ListFilmsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilmsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilmsRequest proto.InternalMessageInfo

type ListFilmsResponse struct {
	Films                []*Film  `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilmsResponse) Reset()         { *m = ListFilmsResponse{} }
func (m *ListFilmsResponse) String() string { return proto.CompactTextString(m) }
func (*ListFilmsResponse) ProtoMessage()    {}
func (*ListFilmsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_006f8d026c00e08a, []int{3}
}

func (m *ListFilmsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilmsResponse.Unmarshal(m, b)
}
func (m *ListFilmsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilmsResponse.Marshal(b, m, deterministic)
}
func (m *ListFilmsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilmsResponse.Merge(m, src)
}
func (m *ListFilmsResponse) XXX_Size() int {
	return xxx_messageInfo_ListFilmsResponse.Size(m)
}
func (m *ListFilmsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilmsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilmsResponse proto.InternalMessageInfo

func (m *ListFilmsResponse) GetFilms() []*Film {
	if m != nil {
		return m.Films
	}
	return nil
}

type Film struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Director             string               `protobuf:"bytes,3,opt,name=director,proto3" json:"director,omitempty"`
	Producer             string               `protobuf:"bytes,4,opt,name=producer,proto3" json:"producer,omitempty"`
	ReleaseDate          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Film) Reset()         { *m = Film{} }
func (m *Film) String() string { return proto.CompactTextString(m) }
func (*Film) ProtoMessage()    {}
func (*Film) Descriptor() ([]byte, []int) {
	return fileDescriptor_006f8d026c00e08a, []int{4}
}

func (m *Film) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Film.Unmarshal(m, b)
}
func (m *Film) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Film.Marshal(b, m, deterministic)
}
func (m *Film) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Film.Merge(m, src)
}
func (m *Film) XXX_Size() int {
	return xxx_messageInfo_Film.Size(m)
}
func (m *Film) XXX_DiscardUnknown() {
	xxx_messageInfo_Film.DiscardUnknown(m)
}

var xxx_messageInfo_Film proto.InternalMessageInfo

func (m *Film) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Film) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Film) GetDirector() string {
	if m != nil {
		return m.Director
	}
	return ""
}

func (m *Film) GetProducer() string {
	if m != nil {
		return m.Producer
	}
	return ""
}

func (m *Film) GetReleaseDate() *timestamp.Timestamp {
	if m != nil {
		return m.ReleaseDate
	}
	return nil
}

func init() {
	proto.RegisterType((*GetFilmRequest)(nil), "GetFilmRequest")
	proto.RegisterType((*GetFilmResponse)(nil), "GetFilmResponse")
	proto.RegisterType((*ListFilmsRequest)(nil), "ListFilmsRequest")
	proto.RegisterType((*ListFilmsResponse)(nil), "ListFilmsResponse")
	proto.RegisterType((*Film)(nil), "Film")
}

func init() { proto.RegisterFile("proto/sfapi.proto", fileDescriptor_006f8d026c00e08a) }

var fileDescriptor_006f8d026c00e08a = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xbd, 0x4e, 0xc3, 0x30,
	0x10, 0xc7, 0x95, 0xb6, 0xa1, 0xf4, 0x8a, 0xfa, 0x61, 0x31, 0x98, 0x30, 0x10, 0x65, 0x62, 0xa8,
	0x1c, 0x14, 0x66, 0x16, 0x84, 0x60, 0x61, 0x0a, 0x4c, 0x2c, 0xc8, 0xd4, 0x97, 0xca, 0x52, 0x52,
	0x07, 0xdb, 0x79, 0x22, 0x5e, 0x14, 0xc5, 0x4e, 0x02, 0x84, 0xc9, 0xfe, 0x7f, 0xf8, 0x74, 0xfe,
	0xc1, 0xb6, 0xd6, 0xca, 0xaa, 0xd4, 0x14, 0xbc, 0x96, 0xcc, 0xdd, 0xa3, 0xab, 0x83, 0x52, 0x87,
	0x12, 0x53, 0xa7, 0x3e, 0x9a, 0x22, 0xb5, 0xb2, 0x42, 0x63, 0x79, 0x55, 0xfb, 0x42, 0x12, 0xc3,
	0xea, 0x09, 0xed, 0xa3, 0x2c, 0xab, 0x1c, 0x3f, 0x1b, 0x34, 0x96, 0xac, 0x60, 0x22, 0x05, 0x0d,
	0xe2, 0xe0, 0x7a, 0x91, 0x4f, 0xa4, 0x48, 0x76, 0xb0, 0x1e, 0x1a, 0xa6, 0x56, 0x47, 0x83, 0xe4,
	0x02, 0x66, 0x85, 0x2c, 0x2b, 0x57, 0x5a, 0x66, 0x21, 0x73, 0xa1, 0xb3, 0x12, 0x02, 0x9b, 0x67,
	0x69, 0x5c, 0xdd, 0x74, 0x13, 0x93, 0x1b, 0xd8, 0xfe, 0xf2, 0xba, 0x19, 0x97, 0x10, 0xb6, 0x0f,
	0x0c, 0x0d, 0xe2, 0xe9, 0xcf, 0x10, 0xef, 0x25, 0x5f, 0x01, 0xcc, 0x5a, 0x3d, 0x5e, 0x86, 0x9c,
	0x43, 0x68, 0xa5, 0x2d, 0x91, 0x4e, 0x9c, 0xe5, 0x05, 0x89, 0xe0, 0x54, 0x48, 0x8d, 0x7b, 0xab,
	0x34, 0x9d, 0xba, 0x60, 0xd0, 0x6d, 0x56, 0x6b, 0x25, 0x9a, 0x3d, 0x6a, 0x3a, 0xf3, 0x59, 0xaf,
	0xc9, 0x1d, 0x9c, 0x69, 0x2c, 0x91, 0x1b, 0x7c, 0x17, 0xdc, 0x22, 0x0d, 0xdd, 0x7f, 0x22, 0xe6,
	0xa1, 0xb1, 0x1e, 0x1a, 0x7b, 0xed, 0xa1, 0xe5, 0xcb, 0xae, 0xff, 0xc0, 0x2d, 0x66, 0x0a, 0x96,
	0x2f, 0x96, 0xeb, 0x42, 0x4b, 0x3c, 0x0a, 0x43, 0x76, 0x30, 0xef, 0x40, 0x91, 0x35, 0xfb, 0x0b,
	0x35, 0xda, 0xb0, 0x31, 0xc3, 0x0c, 0x16, 0x03, 0x14, 0xb2, 0x65, 0x63, 0x68, 0x11, 0x61, 0xff,
	0x98, 0xdd, 0xcf, 0xdf, 0x42, 0xbf, 0xd3, 0x89, 0x3b, 0x6e, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xc7, 0x6e, 0x62, 0xf2, 0xf2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StarfriendsClient is the client API for Starfriends service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StarfriendsClient interface {
	// Get a single Film by unique ID
	GetFilm(ctx context.Context, in *GetFilmRequest, opts ...grpc.CallOption) (*GetFilmResponse, error)
	// Get a list of all Films
	ListFilms(ctx context.Context, in *ListFilmsRequest, opts ...grpc.CallOption) (*ListFilmsResponse, error)
}

type starfriendsClient struct {
	cc *grpc.ClientConn
}

func NewStarfriendsClient(cc *grpc.ClientConn) StarfriendsClient {
	return &starfriendsClient{cc}
}

func (c *starfriendsClient) GetFilm(ctx context.Context, in *GetFilmRequest, opts ...grpc.CallOption) (*GetFilmResponse, error) {
	out := new(GetFilmResponse)
	err := c.cc.Invoke(ctx, "/Starfriends/GetFilm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starfriendsClient) ListFilms(ctx context.Context, in *ListFilmsRequest, opts ...grpc.CallOption) (*ListFilmsResponse, error) {
	out := new(ListFilmsResponse)
	err := c.cc.Invoke(ctx, "/Starfriends/ListFilms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StarfriendsServer is the server API for Starfriends service.
type StarfriendsServer interface {
	// Get a single Film by unique ID
	GetFilm(context.Context, *GetFilmRequest) (*GetFilmResponse, error)
	// Get a list of all Films
	ListFilms(context.Context, *ListFilmsRequest) (*ListFilmsResponse, error)
}

func RegisterStarfriendsServer(s *grpc.Server, srv StarfriendsServer) {
	s.RegisterService(&_Starfriends_serviceDesc, srv)
}

func _Starfriends_GetFilm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFilmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarfriendsServer).GetFilm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Starfriends/GetFilm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarfriendsServer).GetFilm(ctx, req.(*GetFilmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starfriends_ListFilms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFilmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarfriendsServer).ListFilms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Starfriends/ListFilms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarfriendsServer).ListFilms(ctx, req.(*ListFilmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Starfriends_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Starfriends",
	HandlerType: (*StarfriendsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFilm",
			Handler:    _Starfriends_GetFilm_Handler,
		},
		{
			MethodName: "ListFilms",
			Handler:    _Starfriends_ListFilms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/sfapi.proto",
}
